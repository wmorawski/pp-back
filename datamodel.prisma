type User {
  id: ID! @id
  email: String! @unique
  firstName: String!
  lastName: String!
  password: String!
  parties: [Party!]! @relation(name: "UserParties")
  friends: [User!]! @relation(name: "UserFriends")
  pendingFriendInvitations: [User!]! @relation(name: "PendingFriendInvitations")
  pendingPartyInvitations: [Party!]! @relation(name: "PendingPartyInvitations")
  chats: [Chat!]!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  lastOnline: DateTime @default(value: "1970-01-01T00:00:01")
  deleted: Boolean! @default(value: false)
  provider: SocialMediaType
  avatar: String
  thirdPartyId: String
  resetToken: String
  resetTokenExpiry: DateTime
}

type Message {
  id: ID! @id
  author: User! @relation(name: "MessageAuthor")
  chat: Chat! @relation(name: "MessagesInChat")
  content: String!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Party {
  id: ID! @id
  title: String!
  normalizedTitle: String!
  description: String!
  author: User! @relation(name: "PartiesByUser")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  location: Location!
  games: [Game!]
  colorTint: String!
  isPublic: Boolean @default(value: false)
  members: [User!]! @relation(name: "UserParties")
  invitedMembers: [User!]! @relation(name: "PendingPartyInvitations")
  start: DateTime! @default(value: "1970-01-01T00:00:01")
  end: DateTime! @default(value: "1970-01-01T00:00:01")
  inviteSecret: String! @unique
}

type Chat {
  id: ID! @id
  party: Party!
  members: [User!]!
  messages: [Message!] @relation(name: "MessagesInChat")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Game {
  id: ID! @id
  title: String! @unique
  cover: String
  type: GameType!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Location {
  id: ID! @id
  placeName: String!
  latitude: Float!
  longitude: Float!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Playlist {
  id: ID! @id
  playlist_id: String @unique
  name: String!
  tracks: [Track!]!
  isTemporary: Boolean @default(value: true)
}
type Track {
  id: ID! @id
  name: String!
  album: Album!
  artists: [Artist!]!
  duration: Int!
  preview_url: String!
}
type Album {
  id: ID! @id
  images: [Image!]!
  artists: [Artist!]!
}
type Artist {
  id: ID! @id
  name: String!
}

type Image {
  id: ID! @id
  height: Int!
  width: Int!
  url: String!
}
enum GameType {
  BOARD
  PC
  CONSOLE
}
enum SocialMediaType {
  FACEBOOK
  SPOTIFY
  TWITTER
}
