type Query {
  me: User
  getUsers(
    where: UserWhereInput
    orderBy: UserOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [User]!
  paginateUsers(
    where: UserWhereInput
    orderBy: UserOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): UserConnection!
}

type Mutation {
  signup(
    email: String!
    password: String!
    firstName: String!
    lastName: String!
  ): AuthPayload!
  login(email: String!, password: String!): AuthPayload!
  updateMe(name: String): User!
  inviteToFriends(sender: ID!, receiver: ID!): User!
}

type AuthPayload {
  token: String!
  user: User!
}
