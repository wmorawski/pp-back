type Query {
  playlistsConnection(
    where: PlaylistWhereInput
    orderBy: PlaylistOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): PlaylistConnection!
}

type Mutation {
  createPlaylist(data: PlaylistCreateInput!): Playlist!
  updatePlaylist(
    data: PlaylistUpdateInput!
    where: PlaylistWhereUniqueInput!
  ): Playlist
  importPlaylistsToParty(playlists: String!, partyId: ID!): Boolean!
  deletePlaylist(where: PlaylistWhereUniqueInput!): Playlist
  combinePlaylists(
    partyPlannerData: CombinePlaylistPartyPlannerData!
    spotifyData: CombinePlaylistCreatedSpotifyPlaylistInput!
  ): Playlist!
}

input CombinePlaylistPartyPlannerData {
  playlists: String!
  partyId: ID!
  userId: ID!
  deleteAffected: Boolean!
  importable: Boolean!
}

input CombinePlaylistCreatedSpotifyPlaylistInput {
  spotifyId: ID!
  uri: String!
  name: String!
  imageUrl: String!
  spotifyExternalUrl: String!
}
